# Multi-stage build fÃ¶r optimerad produktion
FROM node:20-slim AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy application files
COPY . .

# Build for production
RUN npm run build

# Production stage - endast nginx med statiska filer
FROM nginx:alpine

# Copy built files from builder
COPY --from=builder /app/dist /usr/share/nginx/html

# Custom nginx configuration
RUN echo 'server { \
    listen 3623; \
    server_name _; \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    # Gzip compression \
    gzip on; \
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; \
    \
    # SPA routing - all routes to index.html \
    location / { \
        try_files $uri /index.html; \
    } \
    \
    # API proxy to backend - handle all /api routes \
    location /api { \
        # Strip /api/email prefix for email routes \
        rewrite ^/api/email(/.*)$ $1 break; \
        # Proxy all /api requests to backend \
        proxy_pass http://email-backend:3015; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_cache_bypass $http_upgrade; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    \
    # Cache static assets \
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ { \
        expires 1y; \
        add_header Cache-Control "public, immutable"; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 3623

CMD ["nginx", "-g", "daemon off;"]